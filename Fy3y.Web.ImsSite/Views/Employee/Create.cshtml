
@using Fy3y.Model.Das
@model Fy3y.Model.Das.Employee
@{
  ViewBag.Title = "添加员工";
  Layout = "~/Views/Shared/_Layout.cshtml";
}
<form id="form1">
  @Html.AntiForgeryToken()
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  <div class="form-group row">
    <label class="col-form-label col-md-2">姓名</label>
    <div class="col-md-10">
      @Html.TextBoxFor(model=>model.EmployeeName,new{@class="form-control"})
      @Html.ValidationMessageFor(model => model.EmployeeName, "", new {@class = "text-danger"})
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">性别</label>
    <div class="col-md-10 form-inline ">
      <div class="form-check form-check-inline" style="padding-left: 15px;">
        <label class="form-check-label">
          @Html.RadioButtonFor(m => m.Sex, 1, new { @class = "form-check-input" })
          男性
        </label>
      </div>
      <div class="form-check form-check-inline">
        <label class="form-check-label">
          @Html.RadioButtonFor(m => m.Sex, 2, new { @class = "form-check-input" })
          女性
        </label>
      </div>
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">所在科室</label>
    <div class="col-md-10">
      @Html.DropDownListFor(model => model.DepartmentId, null, new { @class = "custom-select" })
      @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">在职状态</label>
    <div class="col-md-10">
      @Html.DropDownListFor(model => model.StatusId, null, new { @class = "custom-select" })
      @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">工作类别</label>
    <div class="col-md-10 form-inline">
      @{
        var list = ViewBag.categories as IList<EmployeeCategory>;
          if (list.Any())
        {
          foreach (var item in list)
          {
            <div class="form-check form-check-inline">
              <label class="form-check-label" for="@("category" + item.CategoryId)">
                @if (Model?.Categorys != null && Model.Categorys.IndexOf(item.CategoryId.ToString(), StringComparison.Ordinal) > -1)
                {
                  <input type="checkbox" name="Categorys" value="@item.CategoryId" class="form-check-input" id="@("category" + item.CategoryId)" checked="checked" />
                }
                else
                {
                  <input type="checkbox" name="Categorys" value="@item.CategoryId" class="form-check-input" id="@("category" + item.CategoryId)" />
                }
                @item.CategoryName
              </label>
            </div>
          }
        }
      }
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">手机号码</label>
    <div class="col-md-10">
      @Html.TextBoxFor(model => model.Mobile, new { @class = "form-control", placeholder = "请填写主要联系方式" })
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">其它联系</label>
    <div class="col-md-10">
      <input asp-for="OtherPhone" class="form-control" placeholder="有多个其它联系方式请以逗号分开" />
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">身份证号</label>
    <div class="col-md-10">
      <input asp-for="IdCard" class="form-control" />
      @Html.ValidationMessageFor(model => model.IdCard, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">电子邮件</label>
    <div class="col-md-10">
      @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
      @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">虚拟人员</label>
    <div class="col-md-10">
      <div class="form-check form-check-inline">
        <div class="form-check form-check-inline ">
          <label class="form-check-label">
            @Html.RadioButtonFor(m => m.IsVirtual, true, new { @class = "form-check-input" })
            是
          </label>
        </div>
        <div class="form-check form-check-inline">
          <label class="form-check-label">
            @Html.RadioButtonFor(m => m.IsVirtual, false, new { @class = "form-check-input" })
            否
          </label>
        </div>
      </div>
    </div>
  </div>
  <div class="form-group row">
    <label class="col-form-label col-md-2">简单介绍</label>
    <div class="col-md-10">
      <textarea asp-for="Description" class="form-control" rows="5"></textarea>
      @*// @Html.TextAreaFor(model => model.Description, 5, 5, new {@class = "form-control"})*@
    </div>
  </div>
  @Html.HiddenFor(model => model.EmployeeId)
  <input asp-for="EmployeeId" type="hidden"/>
  <input asp-for="PinYin" type="hidden" />
</form>
<div class="form-group row">
  <div class="col-md-10 col-md-offset-2">
    <button class="btn btn-dark d-print-none" id="submit">
      <i class="fa fa-save">保存</i>
    </button>
    @Html.ActionLink("返回列表", "Index")
  </div>
</div>
<script>

  function validForm() {
    return $("#form1").validate({
      rules: {
        EmployeeName: {
          required: true
        },
        Mobile: {
          required: true
        },
        IdCard: {
          required: true
        },
        Categorys: {
          required: true
        }
      }
    });
  }

  //注册表单验证
  $(validForm());
  //点击表单保存按钮触发单击事件，进行表单验证，验证通过发起ajax请求，验证不通过在表单里提示
  $("#submit").click(function() {
    if (validForm().form()) {
      var url = "@Url.Action("Create")";
      var data = $("#form1").serialize();
      AjaxSubmit(url, data);
    }
  });
</script>