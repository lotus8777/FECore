@model Fy3y.Model.Das.SecurityReport
@{
  ViewBag.Title = "修改安全日报表";
  Layout = "~/Views/Shared/_Layout.cshtml";
}
<form id="form1">
  @Html.AntiForgeryToken()
  @Html.HiddenFor(model => model.ReportId)
  @Html.HiddenFor(model => model.DepartmentId)
  @Html.HiddenFor(model => model.ReportDate)
  @Html.HiddenFor(model => model.CreateTime)
  @Html.HiddenFor(model => model.CreatorId)
  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  <div class="form-group">
    @Html.LabelFor(model => model.Criticality, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Criticality, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Criticality, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Death, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Death, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Death, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Infection, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Infection, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Infection, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Undiagnosed, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Undiagnosed, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Undiagnosed, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.DrugAccident, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.DrugAccident, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.DrugAccident, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Harmful, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Harmful, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Harmful, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Complications, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Complications, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Complications, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Complaint, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Complaint, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Complaint, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Others, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.EditorFor(model => model.Others, new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Others, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.Disposal, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.TextAreaFor(model => model.Disposal, 5,100,new { htmlAttributes = new { @class = "form-control" } })
      @Html.ValidationMessageFor(model => model.Disposal, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    @Html.LabelFor(model => model.CheckerId, new { @class = "control-label col-md-2" })
    <div class="col-md-3 col-xs-4">
      @Html.DropDownListFor(model => model.CheckerId, null, new { @class = "custom-select" })
      @Html.ValidationMessageFor(model => model.CheckerId, "", new { @class = "text-danger" })
    </div>
  </div>
  <div class="form-group">
    <label class="col-md-2 control-label">有效</label>
    <div class="col-md-3 col-xs-4">
      @Html.CheckBoxFor(model => model.IsValid, new { @class = "form-control" })
      @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
    </div>
  </div>
</form>
<div class="text-center">
  <button class="btn btn-dark d-print-none" id="submit">
    <i class="fa fa-save">保存</i>
  </button>
  @Html.ActionLink("返回列表", "Index")
</div>
<script type="text/javascript">

  //点击表单保存按钮触发单击事件，进行表单验证，验证通过发起ajax请求，验证不通过在表单里提示
  $("#submit").click(function() {
    var url = "@Url.Action("Edit")";
    var data = $("#form1").serialize();
    AjaxSubmit(url, data);
  });
</script>