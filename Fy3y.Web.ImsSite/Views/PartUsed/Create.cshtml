@model Fy3y.Model.Das.PartUsed
@{
  ViewBag.Title = "添加设备/配件使用单";
}
<br />
<form class="text-center" id="form1">
  @Html.AntiForgeryToken()
  @Html.ValidationSummary(true)
  <div class="form-group row">
    <label class="col-2 col-form-label">设备名称</label>
    <div class="col-4">

      @Html.TextBox("PartName", Model.Part.PartName, new {@class = "form-control", @readonly = "readonly"})
    </div>
    <label class="col-2 col-form-label">规格型号</label>
    <div class="col-4">
      @Html.TextBox("BrandModel", Model.Part.BrandModel, new {@class = "form-control", @readonly = "readonly"})
    </div>
  </div>
  <div class="form-group row">
    <label class="col-2 col-form-label">使用科室</label>
    <div class="col-4">
      @Html.DropDownList("departmentId", null, new {@class = "form-control"})
      @Html.HiddenFor(model => model.DepartmentName)
    </div>
    <label class="col-2 col-form-label">领取人</label>
    <div class="col-4">
      @Html.DropDownListFor(model => model.UserName, null, new {@class = "custom-select"})
    </div>
  </div>
  <div class="form-group row">
    <label class="col-2 col-form-label">使用数量</label>
    <div class="col-4">
      @Html.TextBoxFor(model => model.Quantity, null, new {@class = "form-control"})
    </div>
    <label class="col-2 col-form-label">使用时间</label>
    <div class="col-4">
      @Html.TextBoxFor(model => model.UsedTime, null, new {onfocus = "WdatePicker({isShowClear:false,readOnly:true,isShowOK:false})", @class = "form-control"})
    </div>
  </div>
  <div class="form-group row">
    <label class="col-2 col-form-label">使用原因</label>
    <div class="col-10">
      @Html.TextAreaFor(model => model.Remarks, new {@class = "form-control", rows = "3"})
    </div>
  </div>
  @Html.HiddenFor(model => model.CreateTime)
  @Html.HiddenFor(model => model.UniqueId)
  @Html.HiddenFor(model => model.PartId)
  @Html.HiddenFor(model => model.IsValid)
</form>
<div class="d-print-none text-center">
  <button class="btn btn-dark" id="submit">
    <i class="fa fa-save">保存</i>
  </button>
  @Html.ActionLink("返回", "Index", new {id = ViewBag.maintainId}, new {@class = "btn btn-white"})
</div>
<script type="text/javascript">

  $("#departmentId").change(function() {
    var departmentId = $("#departmentId").val();
    $.ajax({
      type: "POST",
      url: "@Url.Action("GetEmployeesByDepartment","Helper")",
      data: { "departmentId": departmentId },
      success: function(msg) {
        if (msg.status == 1) {
          $("#UserName option").remove();
          msg.data.forEach(function(item) {
            $("#UserName").append("<option value=" + item.EmployeeName + ">" + item.EmployeeName + "</option>");
          });
        }
      }
    });

  });

  $("#ClassName").change(function() {
    var className = $("#ClassName").val();
    $.ajax({
      type: "POST",
      url: "@Url.Action("GetDevices")",
      data: { "className": className },
      success: function(msg) {
        if (msg.status == 1) {
          $("#PartId option").remove();
          msg.data.forEach(function(item) {
            $("#PartId").append("<option value=" + item.Value + ">" + item.Text + "</option>");
          });
        }
      }
    });
  });

  function validForm() {
    return $("#form1").validate({
      rules: {
        Quantity: {
          required: true
        }
      }
    });
  }

  //注册表单验证
  $(validForm());
  //点击表单保存按钮触发单击事件，进行表单验证，验证通过发起ajax请求，验证不通过在表单里提示
  $("#submit").click(function() {
    if (validForm().form()) {
      var departmentName = $("#departmentId option:selected").text();
      $("#DepartmentName").val(departmentName);
      var url = "@Url.Action("Create")";
      var data = $("#form1").serialize();
      AjaxSubmit(url, data);
    }
  });
</script>