@model Fy3y.Model.Das.Overtime
@{
    ViewBag.Title = "额外工作记录单";
}
<form id="form1" method="post" onsubmit="return validForm()">
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.Label(null, "申请人", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.CreatorName, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(null, "申请科室", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.DepartmentName, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(null, "工作项目", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(null, "开始时间", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.BeginTime, new { @class = "form-control", onfocus = "WdatePicker({isShowClear:false,readOnly:true,isShowOK:false,maxDate:'%y-%M-%d',dateFmt:'yyyy/MM/dd'})" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(null, "结束时间", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.EndTime, new { @class = "form-control", onfocus = "WdatePicker({isShowClear:false,readOnly:true,isShowOK:false,maxDate:'%y-%M-%d',dateFmt:'yyyy/MM/dd '})" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(null, "累计时长", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Duration, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label(null, "工作人员", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Worker, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label(null, "工作事由", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control", rows = 5, required = "" })
            </div>
        </div>
        @Html.HiddenFor(m => m.OvertimeId)
        @Html.HiddenFor(m => m.CreatorId)
        @Html.HiddenFor(m => m.CreateTime)
        @Html.HiddenFor(m => m.DepartmentId)
        @Html.HiddenFor(m => m.IsValid)
    </div>

    <div class="text-center">
      <button class="btn btn-dark"><span class="fa fa-save"></span>保存</button>
        @Html.ActionLink("返回", "Index", null, new { @class = "btn btn-white" })
    </div>
</form>

<script>
  function validForm() {
    return $("#form1").validate({
      rules: {
        Remarks: {
          required: true
        },
        Title: {
          required: true
        }
      }
    });
  }

  //注册表单验证
  $(validForm());
  //点击表单保存按钮触发单击事件，进行表单验证，验证通过发起ajax请求，验证不通过在表单里提示
  
</script>